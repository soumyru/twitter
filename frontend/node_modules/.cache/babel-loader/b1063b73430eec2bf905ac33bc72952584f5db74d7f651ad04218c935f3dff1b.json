{"ast":null,"code":"import React,{useState}from'react';import twitterImage from'../../assets/image/twitter.jpeg';import TwitterIcon from'@mui/icons-material/Twitter';import{useCreateUserWithEmailAndPassword,useSignInWithGoogle}from'react-firebase-hooks/auth';import auth from'../../firebase.init';import GoogleButton from'react-google-button';import{Link,useNavigate}from'react-router-dom';import'./Login.css';import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Signup=()=>{const[username,setUsername]=useState('');const[name,setName]=useState('');const[email,setEmail]=useState('');const[password,setPassword]=useState('');// const [errorMessage,setError]=useState('');\nconst navigate=useNavigate();const[createUserWithEmailAndPassword,user,loading,error]=useCreateUserWithEmailAndPassword(auth);//got from react-firebase-hook-github>>useSignInWithGoogle(changed variable names from user to googleUser)\nconst[signInWithGoogle,googleUser,googleLoading,googleError]=useSignInWithGoogle(auth);if(user||googleUser){navigate('/');//when user signed in or signed up this navigates to homepage\nconsole.log(user);console.log(googleUser);}if(error)console.log(error.message);if(loading)console.log('loading...');const handleSubmit=e=>{e.preventDefault();// console.log(email,password);\ncreateUserWithEmailAndPassword(email,password);//we are creating a user object so that when user is signing up we will store his data in our mongodb database\nconst user={username:username,name:name,email:email//not storing users password for in case our database gets hacked then user's dat awill be exposed\n};//post is a data & route link is register\naxios.post(\"http://localhost:5000/register\",user);//     fetch('http://localhost:5000/post', {//in fetch we are fetching the post route\n//       method: \"POST\",\n//       headers: {\n//           'content-type': 'application/json'\n//       },\n//       body: JSON.stringify(userPost),\n//   })\n//       .then(res => res.json()) // we get the response\n//       .then(data => { //get data n console log it\n//           console.log(data);\n//       })\n};//Google button onClick \nconst handleGoogleSignIn=()=>{// e.preventDefault();\n// console.log(email,password);\n// createUserWithEmailAndPassword(email,password);\nsignInWithGoogle();};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"image-container\",children:/*#__PURE__*/_jsx(\"img\",{className:\"image\",src:twitterImage,alt:\"\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-box\",children:[/*#__PURE__*/_jsx(TwitterIcon,{className:\"Twitericon\",style:{color:'skyblue'}}),/*#__PURE__*/_jsx(\"h2\",{className:\"heading\",children:\"Happening now\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"heading1\",children:\"Join twitter today\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"display-name\",placeholder:\"@username\",onChange:e=>{setUsername(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"display-name\",placeholder:\"Enter full name\",onChange:e=>{setName(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"email\",placeholder:\"Email address\",onChange:e=>{setEmail(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"password\",placeholder:\"Password\",onChange:e=>{setPassword(e.target.value);}}),/*#__PURE__*/_jsx(\"div\",{className:\"btn-login\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn\",children:\"Sign up\"})})]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"google-button\",children:/*#__PURE__*/_jsx(GoogleButton,{className:\"g-btn\",type:\"light\",onClick:handleGoogleSignIn})}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Already have na account?\",/*#__PURE__*/_jsx(Link,{to:\"/login\",style:{textDecoration:'none',color:'skyblue',fontWeight:'600',marginLeft:'5px'},children:\"Login\"})]})]})})]});};export default Signup;","map":{"version":3,"names":["React","useState","twitterImage","TwitterIcon","useCreateUserWithEmailAndPassword","useSignInWithGoogle","auth","GoogleButton","Link","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","Signup","username","setUsername","name","setName","email","setEmail","password","setPassword","navigate","createUserWithEmailAndPassword","user","loading","error","signInWithGoogle","googleUser","googleLoading","googleError","console","log","message","handleSubmit","e","preventDefault","post","handleGoogleSignIn","className","children","src","alt","style","color","onSubmit","type","placeholder","onChange","target","value","onClick","to","textDecoration","fontWeight","marginLeft"],"sources":["C:/Users/soumy/Documents/GitHub/twitter/frontend/src/pages/Login/Signup.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport twitterImage from '../../assets/image/twitter.jpeg';\r\nimport TwitterIcon from '@mui/icons-material/Twitter';\r\nimport {useCreateUserWithEmailAndPassword, useSignInWithGoogle} from 'react-firebase-hooks/auth';\r\nimport auth from '../../firebase.init';\r\nimport GoogleButton from 'react-google-button';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './Login.css';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Signup = () => {\r\n    const [username,setUsername]=useState('');\r\n    const [name,setName]=useState('');\r\n    const [email,setEmail]=useState('');\r\n    const [password,setPassword]=useState('');\r\n    // const [errorMessage,setError]=useState('');\r\n    const navigate=useNavigate();\r\n\r\n\r\n    const [\r\n        createUserWithEmailAndPassword,\r\n        user,\r\n        loading,\r\n        error,\r\n    ] = useCreateUserWithEmailAndPassword(auth);\r\n\r\n    //got from react-firebase-hook-github>>useSignInWithGoogle(changed variable names from user to googleUser)\r\n    const [signInWithGoogle, googleUser, googleLoading, googleError] = useSignInWithGoogle(auth);\r\n    if(user || googleUser){\r\n        navigate('/')//when user signed in or signed up this navigates to homepage\r\n        console.log(user);\r\n        console.log(googleUser);\r\n    }\r\n\r\n    if(error)\r\n    console.log(error.message);\r\n\r\n    if(loading)\r\n    console.log('loading...');\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        // console.log(email,password);\r\n        createUserWithEmailAndPassword(email,password);\r\n\r\n        //we are creating a user object so that when user is signing up we will store his data in our mongodb database\r\n        const user={\r\n            username:username,\r\n            name:name,\r\n            email:email,\r\n            //not storing users password for in case our database gets hacked then user's dat awill be exposed\r\n        }\r\n        //post is a data & route link is register\r\n        axios.post(`http://localhost:5000/register`,user);\r\n\r\n    //     fetch('http://localhost:5000/post', {//in fetch we are fetching the post route\r\n    //       method: \"POST\",\r\n    //       headers: {\r\n    //           'content-type': 'application/json'\r\n    //       },\r\n    //       body: JSON.stringify(userPost),\r\n    //   })\r\n    //       .then(res => res.json()) // we get the response\r\n    //       .then(data => { //get data n console log it\r\n    //           console.log(data);\r\n\r\n    //       })\r\n    }\r\n\r\n    //Google button onClick \r\n    const handleGoogleSignIn=()=>{\r\n        // e.preventDefault();\r\n        // console.log(email,password);\r\n        // createUserWithEmailAndPassword(email,password);\r\n        signInWithGoogle();\r\n    }\r\n\r\n  return (\r\n    <div className='login-container'>\r\n    <div className=\"image-container\">\r\n        <img className='image' src={twitterImage} alt=\"\" />\r\n    </div>\r\n    <div className=\"form-container\">\r\n        <div className=\"form-box\">\r\n        <TwitterIcon className='Twitericon' style={{color:'skyblue'}}/>\r\n        <h2 className='heading'>Happening now</h2>\r\n        <h3 className='heading1'>Join twitter today</h3>\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <input type=\"text\" \r\n            className='display-name'\r\n            placeholder='@username'\r\n            onChange={(e)=>{setUsername(e.target.value)}}\r\n            />\r\n            \r\n            <input type=\"text\" \r\n            className='display-name'\r\n            placeholder='Enter full name'\r\n            onChange={(e)=>{setName(e.target.value)}}\r\n            />\r\n            \r\n            <input \r\n            type=\"email\" \r\n            className='email'\r\n            placeholder='Email address'\r\n            onChange={(e)=>{setEmail(e.target.value)}}\r\n            />\r\n\r\n            <input type=\"password\" \r\n            className='password'\r\n            placeholder='Password'\r\n            onChange={(e)=>{setPassword(e.target.value)}}\r\n            />\r\n            <div className='btn-login'>\r\n                <button type='submit' className='btn'>Sign up</button>\r\n            </div>\r\n        </form>\r\n        <hr />\r\n        <div className='google-button'>\r\n            <GoogleButton\r\n            className='g-btn'\r\n            type='light'\r\n            onClick={handleGoogleSignIn}\r\n            />\r\n        </div>\r\n        <div>\r\n            Already have na account?\r\n                <Link\r\n                to='/login'\r\n                style={{\r\n                    textDecoration:'none',\r\n                    color:'skyblue',\r\n                    fontWeight:'600',\r\n                    marginLeft:'5px'\r\n                }}\r\n                >\r\n                Login\r\n                </Link>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Signup"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}