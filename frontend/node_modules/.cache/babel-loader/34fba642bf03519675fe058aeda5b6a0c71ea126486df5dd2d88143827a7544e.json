{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import Post from\"./Post/Post\";import\"./Feed.css\";import TweetBox from\"./TweetBox/TweetBox\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Feed(){const[posts,setPosts]=useState([]);//getting the posts\nuseEffect(()=>{fetch('http://localhost:5000/post').then(res=>res.json()).then(data=>{// console.log(data);\nsetPosts(data);});},[posts]);//we have set 'posts' as dependency so that when a new post is posted then the whole page will re-render and it will be displayed in real-time\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"feed\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"feed__header\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Home\"})}),/*#__PURE__*/_jsx(TweetBox,{}),posts.map(p=>/*#__PURE__*/_jsx(Post,{p:p},p._id))]});}export default Feed;","map":{"version":3,"names":["React","useEffect","useState","Post","TweetBox","jsx","_jsx","jsxs","_jsxs","Feed","posts","setPosts","fetch","then","res","json","data","className","children","map","p","_id"],"sources":["C:/Users/soumy/Documents/GitHub/twitter/frontend/src/pages/Feed/Feed.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport \"./Feed.css\";\r\nimport TweetBox from \"./TweetBox/TweetBox\";\r\n\r\nfunction Feed() {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    //getting the posts\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/post')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                // console.log(data);\r\n                setPosts(data);\r\n            })\r\n    }, [posts]) //we have set 'posts' as dependency so that when a new post is posted then the whole page will re-render and it will be displayed in real-time\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feed__header\">\r\n                <h2>Home</h2>\r\n            </div>\r\n            <TweetBox />\r\n            {\r\n                posts.map(p => <Post key={p._id} p={p} />)\r\n            }\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Feed"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,IAAI,KAAM,aAAa,CAC9B,MAAO,YAAY,CACnB,MAAO,CAAAC,QAAQ,KAAM,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE3C,QAAS,CAAAC,IAAIA,CAAA,CAAG,CACZ,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEtC;AACAD,SAAS,CAAC,IAAM,CACZW,KAAK,CAAC,4BAA4B,CAAC,CAC9BC,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,EAAI,CACV;AACAL,QAAQ,CAACK,IAAI,CAAC,CAClB,CAAC,CAAC,CACV,CAAC,CAAE,CAACN,KAAK,CAAC,CAAC,CAAC;AAEZ,mBACIF,KAAA,QAAKS,SAAS,CAAC,MAAM,CAAAC,QAAA,eACjBZ,IAAA,QAAKW,SAAS,CAAC,cAAc,CAAAC,QAAA,cACzBZ,IAAA,OAAAY,QAAA,CAAI,MAAI,CAAI,CAAC,CACZ,CAAC,cACNZ,IAAA,CAACF,QAAQ,GAAE,CAAC,CAERM,KAAK,CAACS,GAAG,CAACC,CAAC,eAAId,IAAA,CAACH,IAAI,EAAaiB,CAAC,CAAEA,CAAE,EAAZA,CAAC,CAACC,GAAY,CAAC,CAAC,EAE7C,CAAC,CAId,CAEA,cAAe,CAAAZ,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}